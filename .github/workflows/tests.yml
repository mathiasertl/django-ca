name: Tests
on:
  push:
  pull_request:

env:
  UV_SYSTEM_PYTHON: 1
  NEWEST_PYTHON: "3.13"
  NEWEST_CRYPTOGRAPHY: "44.0"
  NEWEST_PYDANTIC: "2.10.0"

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        django-version: [ "5.1.0" ]
        cryptography-version: [ "44.0" ]
        pydantic-version: [ "2.10.0" ]

    name: Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}, cryptography ${{ matrix.cryptography-version }}, pydantic ${{ matrix.pydantic-version }}
    steps:
      - name: Install APT dependencies
        run: sudo apt-get install -y softhsm2

      - name: Install Firefox
        run: sudo apt-get install -y firefox
        if: ${{ matrix.python-version == env.NEWEST_PYTHON && matrix.cryptography-version == env.NEWEST_CRYPTOGRAPHY && matrix.pydantic-version == env.NEWEST_PYDANTIC }}

      - name: Acquire sources
        uses: actions/checkout@v4.2.2

      - name: Setup Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install uv
        uses: astral-sh/setup-uv@v5.3.1
        with:
          enable-cache: true
          cache-dependency-glob: "requirements.txt"

      - name: Update setuptools/wheel
        run: uv pip install -U setuptools wheel

      - name: Install dependencies
        run: uv pip install -r requirements.txt -r requirements/requirements-test.txt django~=${{ matrix.django-version }} cryptography~=${{ matrix.cryptography-version }} pydantic~=${{ matrix.pydantic-version }}

      - name: Initialize demo
        run: python dev.py init-demo

      - name: Run tests
        run: pytest -v --cov-report term-missing --durations=20