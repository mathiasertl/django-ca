Custom management commands are documented in :doc:`/cli/intro`. You need to create a user (that can log into
the admin interface) and create a root and intermediate CA:

{% if console_include %}
.. console-include::
   :include: {{ console_include }}
   :context: {{ context }}
   :path: {{ path }}
{% else %}
.. code-block:: console

   {% filter wordwrap(width=90, wrapstring=" \\\n   >     ", break_on_hyphens=False) %}root@host:{{ path|default('~') }}# {{ manage }} createsuperuser{% endfilter %}
   ...
   {% filter wordwrap(width=90, wrapstring=" \\\n   >     ", break_on_hyphens=False) %}root@host:{{ path|default('~') }}# {{ manage }} init_ca --path-length=1 --subject-format=rfc4514 Root "CN=Root"{% endfilter %}
   {% filter wordwrap(width=90, wrapstring=" \\\n   >     ", break_on_hyphens=False) %}root@host:{{ path|default('~') }}# {{ manage }} init_ca {% if shared %}--path=ca/shared/ {% endif %} --acme-enable --parent="Root" --subject-format=rfc4514 Intermediate "CN=Intermediate"{% endfilter %}
{% endif %}

There are a few things to break down in the above commands:

* The subject (``CN=...``) in the CA is only used by browsers to display the name of a CA. It can be any
  human readable value and does not have to be a domain name.
* The first positional argument to ``init_ca``, ("Root", "Intermediate") is just a human readable name used to
  identify the CA within the command-line interface and web interface. Unlike the CommonName, it must be
  unique.
{% if shared %}* The ``--path=ca/shared/`` parameter for the intermediate CA means that you can use the admin interface to
  issue certificates. Without it, the web server has no access to the private key for your CA.{% endif %}
* The ``--pathlen=1`` parameter for the root CA means that there is at most one level of intermediate CAs.
