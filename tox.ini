[tox]
envlist = pylint,docs,lint,mypy,demo,dist-test
          py{310,311,312,313}-dj{5.1}-cg{44}-acme{3.2}-pydantic{2.10}
          faketime

[testenv]
skipsdist = True
deps =
    -r requirements.txt
    -r requirements/requirements-test.txt
    dj5.1: Django~=5.1.0
    cg44: cryptography~=44.0
    acme3.2: acme~=3.2.0
    pydantic2.10: pydantic~=2.10.0
setenv =
    COVERAGE_FILE = {envdir}/.coverage
commands =
    pytest -v --basetemp="{env_tmp_dir}" --cov-report html:{envdir}/htmlcov/ --durations=20 {posargs}

[testenv:faketime]
skipsdist = True
deps =
    -r requirements.txt
    -r requirements/requirements-test.txt
setenv =
    COVERAGE_FILE = {envdir}/.coverage
allowlist_externals = faketime
commands =
    faketime -f "+100y" pytest -v --no-selenium --basetemp="{env_tmp_dir}" --cov-report html:{envdir}/htmlcov/ --durations=20 {posargs}

[testenv:demo]
basepython = python3.13
skipsdist = True
deps =
    -r requirements.txt
    -r requirements/requirements-test.txt
allowlist_externals = rm
commands =
    rm -rf {envdir}/db.sqlite3 {envdir}/files/
    python dev.py init-demo

[testenv:lint]
basepython = python3.13
skipsdist = True
deps =
    -r requirements.txt
    -r requirements/requirements-lint.txt
commands =
    python dev.py code-quality
    python dev.py validate state
    python dev.py validate license-headers

[testenv:pylint]
basepython = python3
skipsdist = True
deps =
    -r requirements.txt
    -r requirements/requirements-lint.txt
commands =
    pylint ca/ca/ ca/django_ca/ docs/source/django_ca_sphinx/ devscripts/ dev.py

[testenv:docs]
basepython = python3.12
skipsdist = True
allowlist_externals = make
deps =
    -r requirements.txt
    -r requirements/requirements-docs.txt
commands =
    doc8 docs/source/
    make -C docs clean spelling html

[testenv:mypy]
basepython = python3.13
skipsdist = True
deps =
    -r requirements.txt
    -r requirements/requirements-mypy.txt
commands = mypy .

[testenv:dist-test]
basepython = python3
skipsdist = True
deps =
    -r requirements/requirements-dist.txt
commands =
    python -m build -o {env_dir}/dist/
    twine check --strict {env_dir}/dist/*